#!/usr/bin/env sh
set -e -u -o pipefail

k8s_cluster_cert=$K8S_CLUSTER_CERT
k8s_cluster_name=$K8S_CLUSTER_NAME
k8s_token=$(echo $K8S_TOKEN | base64 -d)
k8s_namespace=formbuilder-repos
service_account=$SERVICE_ACCOUNT

ecr_credentials_secret=$ECR_CREDENTIALS_SECRET

environment_name=$ENVIRONMENT_NAME
build_SHA=$BUILD_SHA

echo "build and push docker images"
echo "SHA is ${build_SHA}"

echo -n ${k8s_cluster_cert} | base64 -d > ./ca.crt
kubectl config set-cluster ${k8s_cluster_name} --certificate-authority=./ca.crt --server=https://api.${k8s_cluster_name}
kubectl config set-credentials ${service_account} --token=${k8s_token}
kubectl config set-context ${service_account} --cluster=${k8s_cluster_name} --user=${service_account} --namespace=${k8s_namespace}
kubectl config use-context ${service_account}

echo "Getting secrets from AWS"
export AWS_DEFAULT_REGION=eu-west-2
export AWS_ACCESS_KEY_ID=$(kubectl get secrets -n formbuilder-repos ${ecr_credentials_secret} -o jsonpath='{.data.access_key_id}' | base64 -d)
export AWS_SECRET_ACCESS_KEY=$(kubectl get secrets -n formbuilder-repos ${ecr_credentials_secret}  -o jsonpath='{.data.secret_access_key}' | base64 -d)
export ECR_REPO_URL=$(kubectl get secrets -n formbuilder-repos ${ecr_credentials_secret} -o jsonpath='{.data.repo_url}' | base64 -d)

echo  'Building docker image...'
docker build -t ${ECR_REPO_URL}:latest-${environment_name} -t ${ECR_REPO_URL}:${build_SHA} -f ./Dockerfile .

echo 'Logging into AWS ECR...'
aws ecr get-login-password --region eu-west-2 | docker login --username ${ECR_USERNAME} --password-stdin ${ECR_PASSWORD}

echo 'Pushing latest docker image...'
docker push ${ECR_REPO_URL}:latest-${environment_name}

echo 'Pushing current build SHA docker image...'
docker push ${ECR_REPO_URL}:${build_SHA}
